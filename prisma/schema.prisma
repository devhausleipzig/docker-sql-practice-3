// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int  @id @default(autoincrement())
  userName  String
  email     String
  passwordHash  String
  pwSalt String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Post[]


}

model Image {
  id Int @id @default(autoincrement())
  alt String
  Location String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int 
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  viewCount Int      @default(0)
  title     String
  content   String
  image     String
  tags      String[]
  comments  Comment[]
  user User @relation(fields: [userId], references: [id])
  userId Int
  image Image @relation(fields: [imageId], references: [id])
  imageId Int
  // reactions EmojiPost[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    String
  email     String
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  // reactions EmojiComment[]
}

// model EmojiComment {
//   number      Int       @default(0)
//   comment     Comment   @relation(fields: [commentId], references: [id])
//   commentId   Int
//   emoji       Emoji     @relation(fields: [emojiId], references: [id])
//   emojiId     Int

//   @@id([commentId, emojiId])
// }

// model EmojiPost {
//   number     Int      @default(0)
//   post       Post     @relation(fields: [postId], references: [id])
//   postId     Int
//   emoji      Emoji    @relation(fields: [emojiId], references: [id])
//   emojiId    Int

//   @@id([postId, emojiId])
// }

// model Emoji {
//   id          Int           @id @default(autoincrement())
//   character   String        @unique
//   posts       EmojiPost[]
//   comments    EmojiComment[]
// }